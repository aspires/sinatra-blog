"I did it my way." - Sinatra, and many others.

= sss(e)
Simple, Stylish, Sinatra (Experimental)

This is a blog powered by Sinatra, not the singer, but the web framework
(http://sinatrarb.com). It is small – very small – based on the REST principles
(yay for RESTfulness!), easy, and – most importantly – fun! OK, maybe it's not
fun. Maybe it will be. Or maybe not. We'll see. Maybe.

sss(e) is also an experiment. Consequence: it doesn't work. Well, do be
completely honest, it may actually work. But it may also refuse to even _start_
working for you. It's not your slave, you can't command it to do anything. Free
will and all that. So, it's not for the easily frustrated. Try it out on a free
Sunday afternoon, at least, if that's the kind of thing you're into on a Sunday
afternoon.

== How does it work?
I currently don't have much time to make detailed descriptions of blogging
engines I haven't even written yet, but this may interest you:

* sss(e) uses Sinatra (http://sinatrarb.com).
* It uses Sequel to connect to a database
  (http://code.google.com/p/ruby-sequel/).
* At this moment, you *have* to use SQLite, your database will be in the file
  blog.db. You can create the database running "ruby create_db.rb" in the
  command line.
* There's some preliminary configuration in config.yml.
* We also use JSON a lot, most REST actions can respond in both HTML and JSON.

== Other cool things
* Camping (http://code.whytheluckystiff.net/camping/): A small web framework by
  _why, that makes it easy to implement little applications, like a blog.
* Reststop (http://reststop.rubyforge.org/) is a library on top of camping, that
  makes it easy to write RESTful applications in Camping. For a blog implemented
  in Reststop, see http://reststop.rubyforge.org/svn/trunk/examples/blog.rb.
